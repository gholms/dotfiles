export PATH="${PATH}:/sbin:/usr/sbin"
export EDITOR="vim"
export PAGER="less"
export SYSTEMD_PAGER=""
export GEM_HOME=~/.gem
export PYTHONSTARTUP=~/.pythonrc
export HISTSIZE=25000
export SAVEHIST=50000

# Report cpu/system/user time of commands that run longer than 15 seconds
export REPORTTIME=15

# Make memory corruption bugs worse
export MALLOC_PERTURB_=240

# Make GNU ls not quote file names
export QUOTING_STYLE=literal

# Allow tab-completion in the middle of a word
setopt COMPLETE_IN_WORD

# Share history between zsh processes
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY

# Always set umask=022, regardless of EUID
umask 022

# Aliases
gpg2 --help >/dev/null 2>/dev/null && alias gpg=gpg2

# Keybindings:  viins mode + Home/End keys
bindkey -e
bindkey '^[[H'   vi-beginning-of-line
bindkey '^[[F'   vi-end-of-line
bindkey '^[[3~'  delete-char
case $TERM in (xterm*)
bindkey '\eOH'   vi-beginning-of-line
bindkey '\eOF'   vi-end-of-line
bindkey '^[3;5~' delete-char
esac

# Speed up bzr vcs_info
zstyle ':vcs_info:bzr:*' use-simple true

#
##################### prompt #####################

# Choose a color for the hostname based on the OS version
OS_COLOR='default'
OS_COLOR_TABLE=(red yellow green cyan blue magenta)

if [[ -f /etc/os-release ]]; then
    OS_NAME=$(. /etc/os-release; echo "$ID")

    if [[ "$OS_NAME" = "fedora" ]]; then
        OS_VERSION=$(. /etc/os-release; echo "$VERSION_ID")
        OS_COLOR=$OS_COLOR_TABLE[$(($OS_VERSION % 6 + 1))]
    elif [[ "$OS_NAME" = "rhel" ]] || [[ "$OS_NAME" = "centos" ]]; then
        OS_VERSION=$(. /etc/os-release; echo "$VERSION_ID" | cut -d. -f1)
        OS_COLOR=$OS_COLOR_TABLE[$(($OS_VERSION % 6 + 1))]
    elif [[ "$OS_NAME" = "ubuntu" ]]; then
        OS_VERSION=$(. /etc/os-release; echo "$VERSION_ID")
        OS_COLOR=$OS_COLOR_TABLE[$(($(echo $OS_VERSION | cut -d. -f1) % 3 * 2 +
                                    $(echo $OS_VERSION | cut -d. -f2) / 10 + 1))]
    elif [[ "$OS_NAME" = "gentoo" ]]; then
        OS_COLOR=green
    fi
elif isdarwin; then
    OS_VERSION=$(uname -r | cut -d. -f1)
    OS_COLOR=$OS_COLOR_TABLE[$(($OS_VERSION % 6 + 1))]
fi

if [ -z "$DISPLAY" ]; then
    battery=battery
else
    battery=
fi

grml_theme_add_token rc-no-space '%(?..%?)' '%F{yellow}%(?.. ()' '%(?..%))%f'
grml_theme_add_token short-history '[%!]' '' ''

if (( EUID != 0 )); then
    zstyle :prompt:grml:left:setup items short-history rc-no-space $battery user at host path vcs percent
    zstyle :prompt:grml:left:items:percent pre '%F{blue}'
    zstyle :prompt:grml:left:items:percent post '%f'
else
    zstyle :prompt:grml:left:setup items short-history rc-no-space $battery host path vcs percent
    zstyle :prompt:grml:left:items:percent pre '%F{red}'
    zstyle :prompt:grml:left:items:percent post '%f'
fi
zstyle :prompt:grml:right:setup items
zstyle :prompt:grml:left:items:battery pre ''
zstyle :prompt:grml:left:items:user pre ' %F{blue}'
zstyle :prompt:grml:left:items:user post '%f'
zstyle :prompt:grml:left:items:at pre '%F{blue}'
zstyle :prompt:grml:left:items:at post '%f'
zstyle :prompt:grml:left:items:host pre "%F{$OS_COLOR}"
zstyle :prompt:grml:left:items:host post '%f'
zstyle :prompt:grml:left:items:path pre '%F{blue}'
zstyle :prompt:grml:left:items:path post '%f'

unset OS_COLOR
unset OS_COLOR_TABLE
unset OS_NAME
unset OS_VERSION
